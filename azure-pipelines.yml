name: $(version)

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: PlaygroundSecrets
- group: Chartmuseum
- group: S3Bucket
- name: imageName
  value: surl
- name: version
  value: $[format('1.0.{0}', counter('1.0', 0))]

jobs:


- job: build
  displayName: Build, push image and chart and deploy to playground
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')
  steps:

  - task: VersionDotNetCoreAssemblies@2
    inputs:
      Path: '$(Build.SourcesDirectory)'
      VersionNumber: '$(Build.BuildNumber)'
      Injectversion: False
      VersionRegex: '\d+\.\d+\.\d+'
      FilenamePattern: '.csproj'
      SDKNames: 'Microsoft.NET.Sdk'
      OutputVersion: 'OutputedVersion'

  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: simplify9/$(imageName)
      dockerfile: $(Build.SourcesDirectory)/Dockerfile
      containerRegistry: simplify9cr
      tags: |
        $(version)
        latest

  - task: HelmInstaller@0
    displayName: 'Install Helm 3.2.4'
    inputs:
      helmVersion: '3.2.4'
      checkLatestHelmVersion: false
      installKubectl: false

  - task: HelmDeploy@0
    displayName: Helm package
    inputs:
      command: package
      chartPath: chart
      arguments: --version $(version) --app-version $(version)
      updatedependency: true

  - task: Bash@3
    displayName: 'Upload to chart museum'
    inputs:
      targetType: 'inline'
      script: |
        for f in $(Build.ArtifactStagingDirectory)/*.tgz
        do 
          echo "Uploading @$f"
          curl --data-binary "@$f" https://charts.sf9.io/api/charts --user $(CmUser):$(CmPassword)
        done 

  - task: HelmDeploy@0
    displayName: 'Deploy to playground'
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceConnection: 'k8s-s9-dev'
      namespace: 'playground'
      command: 'upgrade'
      chartName: '$(imageName)'
      chartVersion: $(version)
      releaseName: '$(imageName)'
      
      arguments: >
        --repo https://charts.sf9.io
        --set ingress.enabled=true
        --set ingress.hosts={surl.sf9.io}
        --set environment="Staging"
        --set db="$(dbcs)"
        --set ingress.path="/api"
        --set ingress.tls[0].secretName="surl-tls"
        --set ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-nginx"

